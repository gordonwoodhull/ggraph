{"version":3,"sources":["src/banner.js","src/core.js","src/graph.js","src/dataflow.js","src/pattern.js","src/dataflow_calcs.js","src/interface.js","src/graph_pattern.js","src/subgraph_pattern.js","src/topological_sort.js","src/compose.js","src/footer.js"],"names":[],"mappings":"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","file":"metagraph.js","sourcesContent":["(function() { function _metagraph() {\n'use strict';\n","var metagraph = {\n    version: '0.0.7'\n};\nvar mg = metagraph;\n\nfunction as_array(a) {\n    return !a && [] || (Array.isArray(a) ? a : [a]);\n}\n\nfunction as_keyvalue(o) {\n    return !o && [] || (Array.isArray(o) ? o : Object.keys(o).map(function(key) {\n        return {key: key, value: o[key]};\n    }));\n}\n\nfunction build_map(vals, keyf, wrap) {\n    return vals.reduce(function(o, val) {\n        o[keyf(val)] = wrap(val);\n        return o;\n    }, {});\n}\n","function graph_options(opts) {\n    return Object.assign({\n        nodeKey: function(kv) { return kv.key; },\n        edgeKey: function(kv) { return kv.key; },\n        nodeValue: function(kv) { return kv.value; },\n        edgeValue: function(kv) { return kv.value; },\n        edgeSource: function(kv) { return kv.value.source; },\n        edgeTarget: function(kv) { return kv.value.target; }\n    }, opts || {});\n}\nmetagraph.graph = function(nodes, edges, opts) {\n    nodes = as_keyvalue(nodes);\n    edges = as_keyvalue(edges);\n    var options = graph_options(opts);\n\n    var _nodeMap, _edgeMap, _nodesList, _edgesList, _outsList, _insList;\n\n    function build_node_map() {\n        if(_nodeMap)\n            return;\n        _nodeMap = build_map(nodes, options.nodeKey, node_wrapper);\n    }\n    function build_edge_map() {\n        if(_edgeMap)\n            return;\n        _edgeMap = build_map(edges, options.edgeKey, edge_wrapper);\n    }\n    function build_nodes_list() {\n        if(_nodesList)\n            return;\n        build_node_map();\n        _nodesList = nodes.map(function(v) { return _graph.node(options.nodeKey(v)); });\n    }\n    function build_edges_list() {\n        if(_edgesList)\n            return;\n        build_edge_map();\n        _edgesList = edges.map(function(v) { return _graph.edge(options.edgeKey(v)); });\n    }\n    function build_directional_edge_lists(acc) {\n        build_edge_map();\n        return edges.reduce(function(o, v) {\n            var l = o[acc(v)] = o[acc(v)] || [];\n            l.push(_graph.edge(options.edgeKey(v)));\n            return o;\n        }, {});\n    }\n    function build_outs_map() {\n        if(_outsList)\n            return;\n        _outsList = build_directional_edge_lists(options.edgeSource);\n    }\n    function build_ins_map() {\n        if(_insList)\n            return;\n        _insList = build_directional_edge_lists(options.edgeTarget);\n    }\n    function node_wrapper(n) {\n        return {\n            value: function() {\n                return options.nodeValue(n);\n            },\n            key: function() {\n                return options.nodeKey(n);\n            },\n            graph: function() {\n                return _graph;\n            },\n            outs: function() {\n                build_outs_map();\n                return _outsList[options.nodeKey(n)] || [];\n            },\n            ins: function() {\n                build_ins_map();\n                return _insList[options.nodeKey(n)] || [];\n            }\n        };\n    }\n    function edge_wrapper(e) {\n        return {\n            value: function() {\n                return options.edgeValue(e);\n            },\n            key: function() {\n                return options.edgeKey(e);\n            },\n            graph: function() {\n                return _graph;\n            },\n            source: function() {\n                return _graph.node(options.edgeSource(e));\n            },\n            target: function() {\n                return _graph.node(options.edgeTarget(e));\n            }\n        };\n    }\n    var _graph = {\n        node: function(key) {\n            build_node_map();\n            return _nodeMap[key];\n        },\n        edge: function(key) {\n            build_edge_map();\n            return _edgeMap[key];\n        },\n        nodes: function() {\n            build_nodes_list();\n            return _nodesList;\n        },\n        edges: function() {\n            build_edges_list();\n            return _edgesList;\n        }\n    };\n    return _graph;\n};\n\nmetagraph.graph_adjacency = metagraph.graph;\nfunction incidence_options(opts) {\n    var gropts = graph_options(opts);\n    return Object.assign({\n        nodeIncidences: n => n && (n.edges || n.ins || n.outs) || [],\n        incidencesOutward: n => {\n            var v = gropts.nodeValue(n);\n            return !v /* doesn't matter */ || !!(v.edges || v.outs);\n        }\n    }, gropts);\n}\nmetagraph.graph_incidence = function(nodes, opts) {\n    nodes = as_keyvalue(nodes);\n    var options = incidence_options(opts);\n    var edges = [];\n    function edge_value(outward, nk, ik) {\n        return outward ? {\n            source: nk,\n            target: ik\n        } : {\n            source: ik,\n            target: nk\n        };\n    }\n    function edge_key(outward, nk, ik) {\n        return outward ? nk + '-' + ik : ik + '-' + nk;\n    }\n    nodes.forEach(function(n) {\n        var nk = options.nodeKey(n),\n            outward = options.incidencesOutward(n);\n        as_array(options.nodeIncidences(options.nodeValue(n)))\n            .forEach(function(ik) {\n                edges.push({\n                    key: edge_key(outward, nk, ik),\n                    value: edge_value(outward, nk, ik)\n                });\n            });\n    });\n    return mg.graph_adjacency(nodes, edges, opts);\n};\nmetagraph.graph_detect = function(spec, opts) {\n    if(spec.incidences)\n        return mg.graph_incidence(spec.incidences, opts);\n    else if(spec.nodes)\n        return mg.graph_adjacency(spec.nodes, spec.edges, opts);\n    throw new Error('did not recognize graph format');\n};\n","metagraph.dataflow = function(spec, options) {\n    var flowgraph = mg.graph_detect(spec, options);\n    var _flow = {\n        instantiate: function(instance, inputs) {\n            var _inst = {\n                _yes_i_am_really_dataflow: true,\n                calc: function(id) {\n                    if(!instance[id]) {\n                        var n = flowgraph.node(id);\n                        instance[id] = n.value().calc(_inst).apply(null, n.ins().map(function(e) {\n                            return _inst.calc(e.source().key());\n                        }));\n                        console.assert(instance[id]);\n                    }\n                    return instance[id];\n                },\n                input: function(namespace, field) {\n                    var input = inputs[namespace];\n                    if(input._yes_i_am_really_dataflow)\n                        return input.calc(field);\n                    else return input[field];\n                }\n            };\n            return _inst;\n        }\n    };\n    return _flow;\n};\n","/**\n * The reason there are so many higher-order functions is that there are five\n * stages of a pattern's life:\n * - specification - the pattern author specifies a pattern in terms of its dataflow and\n *   interface. the pattern is parameterized on user-supplied data accessors\n * - definition (compilation) - the pattern walks the resulting graph and\n *   defines the functions that will respond to data\n * - instantiation - data is provided to the pattern to create objects\n * - binding - if the action needs other indices built, they are built on demand\n *   and provided to the action before it's run\n * - action - responding to user code\n **/\nmetagraph.pattern = function(spec, flowspecs) {\n    var flowspec = spec.dataflow && mg.graph_detect(spec.dataflow),\n        interf = mg.graph_detect(spec.interface);\n    var defn = {node: {}, edge: {}};\n\n    interf.nodes().forEach(function(inode) {\n        defn.node[inode.key()] = {\n            members: {},\n            class_members: {}\n        };\n    });\n    function resolve(deps, funfun) {\n        return function(defn, flow, val) {\n            var action = funfun(defn, flow, val);\n            return function() {\n                return action.apply(null, deps.map(function(dep) {\n                    var parts = dep.split('.');\n                    if(parts.length > 1)\n                        return flow.input(parts[0], parts[1]);\n                    else\n                        return flow.calc(dep);\n                })).apply(null, arguments);\n            };\n        };\n    }\n    interf.edges().forEach(function(iedge) {\n        var ekey = iedge.key(), evalue = iedge.value();\n        var fs = flowspec || flowspecs[ekey.split('.')[0]];\n        var action = evalue.member;\n        if(action && action.funfun) {\n            var funfun = action.funfun(fs, iedge, flowspecs);\n            var deps = as_array(evalue.deps);\n            funfun = resolve(deps, funfun);\n            defn.node[iedge.source().key()].members[evalue.name] = {defn: funfun};\n        }\n    });\n    interf.nodes().forEach(function(inode) {\n        var nkey = inode.key(), nvalue = inode.value();\n        var fs = flowspec || flowspecs[nkey.split('.')[0]];\n        as_array(inode.value()).forEach(function(spec) {\n            as_keyvalue(spec.class_members).forEach(function(cmemspec) {\n                defn.node[nkey].class_members[cmemspec.key] = cmemspec.value(fs, inode);\n            });\n            as_keyvalue(spec.members).forEach(function(memspec) {\n                var mem = memspec.value(fs, inode);\n                defn.node[nkey].members[memspec.key] = {\n                    accessor: mem.accessor,\n                    defn: mem.defn\n                };\n            });\n        });\n        defn.node[nkey].wrap = function(flow, val) {\n            var wrapper = {}, members = defn.node[nkey].members;\n            Object.keys(members).forEach(function(name) {\n                wrapper[name] = members[name].defn(defn, flow, val);\n            });\n            return wrapper;\n        };\n    });\n\n    var inodes2 = interf.nodes().map(function(n) {\n        var n2 = {key: n.key(), value: {}}, class_members = defn.node[n.key()].class_members;\n        Object.keys(class_members).forEach(function(name) {\n            n2.value[name] = class_members[name].defn(defn);\n        });\n        return n2;\n    });\n    var iedges2 = interf.edges().map(function(e) {\n        var e2 = {\n            key: e.key(),\n            value: {\n                source: e.source().key(),\n                target: e.target().key()\n            }\n        };\n    });\n    return mg.graph(inodes2, iedges2);\n};\n\nfunction define_dataflow(flowspec, defn) {\n    var flownodes = flowspec.nodes().map(function(fsn) {\n        return {\n            key: fsn.key(),\n            value: {\n                calc: fsn.value().node.calc(fsn)(defn)\n            }\n        };\n    });\n    return mg.dataflow({\n        nodes: flownodes,\n        edges: flowspec.edges().map(e => ({key: e.key(), value: e.value()}))\n    });\n}\n","metagraph.input = function(path) {\n    return {\n        calc: function(fnode) {\n            path = path || fnode.key();\n            var parts = path.split('.');\n            var [namespace, name] = parts.length > 1 ? parts : ['data', path];\n            return function(defn) {\n                return function(flow) {\n                    return function() {\n                        return flow.input(namespace, name);\n                    };\n                };\n            };\n        }\n    };\n};\n// pass-through\nmetagraph.output = function(name, namespace) {\n    return {\n        calc: function(fnode) {\n            return function(defn) {\n                return function(flow) {\n                    return function(x) {\n                        return x;\n                    };\n                };\n            };\n        }\n    };\n};\nmetagraph.map = function() {\n    return {\n        calc: function(fnode) {\n            var iref = as_array(fnode.value().refs)[0];\n            return function(defn) {\n                return function(flow) {\n                    return function(data) {\n                        return build_map(data,\n                                         defn.node[iref].members.key.accessor,\n                                         defn.node[iref].wrap.bind(null, flow));\n                    };\n                };\n            };\n        }\n    };\n};\nmetagraph.singleton = function() {\n    return {\n        calc: function(fnode) {\n            return function(defn) {\n                return function(flow) {\n                    return function() {\n                        throw new Error('singleton not initialized');\n                    };\n                };\n            };\n        }\n    };\n};\nmetagraph.list = function() {\n    return {\n        calc: function(fnode) {\n            var iref = as_array(fnode.value().refs)[0];\n            return function(defn) {\n                return function(flow) {\n                    return function(data, map) {\n                        return data.map(function(val) {\n                            return map[defn.node[iref].members.key.accessor(val)];\n                        });\n                    };\n                };\n            };\n        }\n    };\n};\nmetagraph.map_of_lists = function(accessor) {\n    return {\n        calc: function(fnode) {\n            return function(defn) {\n                return function(flow) {\n                    return function(data, map) {\n                        var iref = as_array(fnode.value().refs)[0];\n                        return data.reduce(function(o, v) {\n                            var key = accessor(v);\n                            var list = o[key] = o[key] || [];\n                            list.push(map[defn.node[iref].members.key.accessor(v)]);\n                            return o;\n                        }, {});\n                    };\n                };\n            };\n        }\n    };\n};\nmetagraph.subset = function() {\n    return {\n        calc: function(fnode) {\n            var iref = as_array(fnode.value().refs)[0];\n            return function(defn) {\n                return function(flow) {\n                    return function(items, keys) {\n                        var set = new Set(keys);\n                        return items.filter(function(r) {\n                            return set.has(defn.node[iref].members.key.accessor(r));\n                        });\n                    };\n                };\n            };\n        }\n    };\n};\n","metagraph.createable = function(flowkey) {\n    return {\n        class_members: {\n            create: function(flowspec, inode) {\n                return {\n                    defn: function(defn) {\n                        var flowg = define_dataflow(flowspec, defn);\n                        return function(data) {\n                            var env = {};\n                            var flow = flowg.instantiate(env, {data: data});\n                            env[flowkey] = defn.node[inode.key()].wrap(flow, data[inode.key()]);\n                            return env[flowkey];\n                        };\n                    }\n                };\n            }\n        }\n    };\n};\nmetagraph.call = function(methodname) {\n    return function(f) {\n        return {\n            members: [{\n                key: methodname,\n                value: function(flowspec, inode) {\n                    return {\n                        accessor: f,\n                        defn: function(defn, flow, val) {\n                            return function() {\n                                return f(val);\n                            };\n                        }\n                    };\n                }\n            }]\n        };\n    };\n};\nmetagraph.key = mg.call('key');\nmetagraph.value = mg.call('value');\n\n// interface edges\nmetagraph.reference = function(inode) {\n    return {\n        reference: inode\n    };\n};\nmetagraph.fetch = function() {\n    return {\n        funfun: function(flowspec, iedge) {\n            return function(defn, flow) {\n                return function(x) {\n                    return function() {\n                        return x;\n                    };\n                };\n            };\n        }\n    };\n};\nmetagraph.lookupArg = function(access) {\n    return {\n        funfun: function(flowspec, iedge) {\n            access = access || (x => x);\n            return function(defn, flow, val) {\n                return function(map) {\n                    return function(key) {\n                        return map[access(key)];\n                    };\n                };\n            };\n        }\n    };\n};\nmetagraph.lookupFVal = function(access) {\n    return {\n        funfun: function(flowspec, iedge) {\n            return function(defn, flow, val) {\n                return function(map) {\n                    return function() {\n                        return map[access(val)];\n                    };\n                };\n            };\n        }\n    };\n};\nmetagraph.lookupKVal = function() {\n    return {\n        funfun: function(flowspec, iedge) {\n            return function(defn, flow, val) {\n                return function(map) {\n                    return function() {\n                        return map[defn.node[iedge.source().key()].members.key.accessor(val)] || [];\n                    };\n                };\n            };\n        }\n    };\n};\nmetagraph.subgraph = function() {\n    return {\n        funfun: function(flowspec, iedge, flowspecs) {\n            return function(defn, flow, val) {\n                var subflow = define_dataflow(flowspec, defn), graflow = subflow;\n                var parts = iedge.target().key().split('.');\n                if(parts.length > 1) {\n                    var dest = parts[0];\n                    graflow = define_dataflow(flowspecs[dest], defn);\n                }\n                return function() {\n                    return function(nodeKeys, edgeKeys, gdata) {\n                        // two environments, one for the sub-pattern and one for the graph pattern\n                        var sgflow = subflow.instantiate({}, {\n                            data: {\n                                nodeKeys: nodeKeys,\n                                edgeKeys: edgeKeys\n                            },\n                            parent: flow});\n                        var genv = {};\n                        var gflow = graflow.instantiate(genv, {\n                            data: sgflow\n                        });\n                        genv.graph = defn.node[iedge.target().key()].wrap(gflow, gdata);\n                        return genv.graph;\n                    };\n                };\n            };\n        }\n    };\n};\n\n","metagraph.graph_pattern = function(opts) {\n    var options = graph_options(opts);\n    return {\n        dataflow: {\n            incidences: {\n                nodes: {node: mg.input()},\n                edges: {node: mg.input()},\n                node_by_key: {\n                    node: mg.map(),\n                    refs: 'Node',\n                    ins: 'nodes'\n                },\n                edge_by_key: {\n                    node: mg.map(),\n                    refs: 'Edge',\n                    ins: 'edges'\n                },\n                graph: {node: mg.singleton()},\n                node_list: {\n                    node: mg.list(),\n                    refs: 'Node',\n                    ins: ['nodes', 'node_by_key']\n                },\n                edge_list: {\n                    node: mg.list(),\n                    refs: 'Edge',\n                    ins: ['edges', 'edge_by_key']\n                },\n                node_outs: {\n                    node: mg.map_of_lists(options.edgeSource),\n                    refs: 'Node',\n                    ins: ['edges', 'edge_by_key']\n                },\n                node_ins: {\n                    node: mg.map_of_lists(options.edgeTarget),\n                    refs: 'Node',\n                    ins: ['edges', 'edge_by_key']\n                }\n            }\n        },\n        interface: {\n            nodes: {\n                Graph: mg.createable('graph'),\n                Node: [mg.key(options.nodeKey), mg.value(options.nodeValue)],\n                Edge: [mg.key(options.edgeKey), mg.value(options.edgeValue)]\n            },\n            edges: {\n                graph_node: {\n                    name: 'node',\n                    source: 'Graph', target: 'Node',\n                    deps: 'node_by_key',\n                    member: mg.lookupArg()\n                },\n                node_graph: {\n                    name: 'graph',\n                    source: 'Node', target: 'Graph',\n                    deps: 'graph',\n                    member: mg.fetch()\n                },\n                graph_nodes: {\n                    name: 'nodes',\n                    source: 'Graph', target: 'Node',\n                    deps: 'node_list',\n                    member: mg.fetch()\n                },\n                graph_edge: {\n                    name: 'edge',\n                    source: 'Graph', target: 'Edge',\n                    deps: 'edge_by_key',\n                    member: mg.lookupArg()\n                },\n                edge_graph: {\n                    name: 'graph',\n                    source: 'Edge', target: 'Graph',\n                    deps: 'graph',\n                    member: mg.fetch()\n                },\n                graph_edges: {\n                    name: 'edges',\n                    source: 'Graph', target: 'Edge',\n                    deps: 'edge_list',\n                    member: mg.fetch()\n                },\n                edge_source: {\n                    name: 'source',\n                    source: 'Edge', target: 'Node',\n                    deps: 'node_by_key',\n                    member: mg.lookupFVal(options.edgeSource)\n                },\n                edge_target: {\n                    name: 'target',\n                    source: 'Edge', target: 'Node',\n                    deps: 'node_by_key',\n                    member: mg.lookupFVal(options.edgeTarget)\n                },\n                node_outs: {\n                    name: 'outs',\n                    source: 'Node', target: 'Edge',\n                    deps: 'node_outs',\n                    member: mg.lookupKVal()\n                },\n                node_ins: {\n                    name: 'ins',\n                    source: 'Node', target: 'Edge',\n                    deps: 'node_ins',\n                    member: mg.lookupKVal()\n                }\n            }\n        }\n    };\n};\n","metagraph.subgraph_pattern = function(opts) {\n    var options = graph_options(opts);\n    return {\n        dataflow: {\n            incidences: {\n                parent_nodes: {node: mg.input('parent.nodes')},\n                parent_edges: {node: mg.input('parent.edges')},\n                node_keys: {node: mg.input('nodeKeys')},\n                edge_keys: {node: mg.input('edgeKeys')},\n                subset_nodes: {\n                    node: mg.subset(),\n                    refs: 'child.Node',\n                    ins: ['parent_nodes', 'node_keys']\n                },\n                subset_edges: {\n                    node: mg.subset(),\n                    refs: 'child.Edge',\n                    ins: ['parent_edges', 'edge_keys']\n                },\n                nodes: {\n                    node: mg.output(),\n                    ins: 'subset_nodes'\n                },\n                edges: {\n                    node: mg.output(),\n                    ins: 'subset_edges'\n                }\n            }\n        },\n        interface: {\n            nodes: {\n                ParentGraph: 'parent.Graph',\n                ChildGraph: 'child.Graph'\n            },\n            edges: {\n                subgraph: {\n                    name: 'subgraph',\n                    source: 'ParentGraph', target: 'ChildGraph',\n                    member: mg.subgraph()\n                },\n                subnode: {\n                    name: 'subnode',\n                    source: 'ParentGraph', target: 'ChildGraph',\n                    deps: 'parent.node_by_key',\n                    member: mg.lookupArg()\n                },\n                subedge: {\n                    name: 'subedge',\n                    source: 'ParentGraph', target: 'ChildGraph',\n                    deps: 'parent.edge_by_key',\n                    flow: mg.lookupArg()\n                },\n                subgraphS: {\n                    name: 'subgraph',\n                    source: 'ChildGraph', target: 'ParentGraph',\n                    member: mg.subgraph()\n                },\n                subnodeS: {\n                    name: 'subnode',\n                    source: 'ChildGraph', target: 'ParentGraph',\n                    deps: 'node_by_key', // should be child:\n                    member: mg.lookupArg(x => x.key())\n                },\n                subedgeS: {\n                    name: 'subedge',\n                    source: 'ChildGraph', target: 'ParentGraph',\n                    deps: 'edge_by_key', // should be child:\n                    flow: mg.lookupArg(x => x.key())\n                }\n            }\n        }\n    };\n};\n","metagraph.topological_sort = function(graph) {\n    // https://en.wikipedia.org/wiki/Topological_sorting#Depth-first_search\n    var stacked = {}, marked = {}, sorted = [];\n    function visit(n) {\n        if(stacked[n.key()])\n            throw new Error('not a DAG');\n        if(!marked[n.key()]) {\n            stacked[n.key()] = true;\n            n.outs().forEach(function(e) {\n                visit(e.target());\n            });\n            marked[n.key()] = true;\n            stacked[n.key()] = false;\n            sorted.unshift(n);\n        }\n    }\n    var i = 0;\n    while(Object.keys(marked).length < graph.nodes().length) {\n        while(marked[graph.nodes()[i].key()]) ++i;\n        visit(graph.nodes()[i]);\n    }\n    return sorted;\n};\n\n","metagraph.compose = function(composition) {\n    var sorted = mg.topological_sort(composition);\n    var built = {}, flowspecs = {};\n    function input_edge(patnode, name) {\n        return patnode.ins().find(pe => pe.value().input === name);\n    }\n    // resolve dependencies and build patterns\n    sorted.forEach(function(patnode) {\n        var flowspec = mg.graph_detect(patnode.value().dataflow);\n        var fnodes = flowspec.nodes().map(function(fn) {\n            var v2 = Object.assign({}, fn.value());\n            v2.refs = as_array(v2.refs).map(function(ref) {\n                var parts = ref.split('.');\n                if(parts.length > 1) {\n                    var patedge = input_edge(patnode, parts[0]);\n                    return patedge.source().key() + '.' + parts[1];\n                }\n                else return patnode.key() + '.' + parts[0];\n            });\n            return {\n                key: fn.key(),\n                value: v2\n            };\n        });\n        var fedges = flowspec.edges().map(e => ({key: e.key(), value: e.value()}));\n        flowspecs[patnode.key()] = mg.graph(fnodes, fedges);\n        var interf = patnode.value().interface;\n        built[patnode.key()] = mg.graph_detect({\n            nodes: interf.nodes,\n            edges: interf.edges\n        });\n    });\n    // unite patterns\n    var nodes = [], edges = [], mappings = {};\n    function lookup(key) {\n        return mappings[key] || key;\n    }\n    sorted.forEach(function(patnode) {\n        var pattern = built[patnode.key()];\n        pattern.nodes().forEach(function(inode) {\n            var key = patnode.key() + '.' + inode.key();\n            var ref = as_array(inode.value()).find(spec => typeof spec === 'string');\n            if(ref) {\n                var parts = ref.split('.');\n                var patedge = input_edge(patnode, parts[0]);\n                var key2 = lookup(patedge.source().key() + '.' + parts[1]);\n                mappings[key] = key2;\n            }\n            else nodes.push({\n                key: key,\n                value: inode.value()\n            });\n        });\n        pattern.edges().forEach(function(iedge) {\n            var val2 = Object.assign({}, iedge.value());\n            val2.source = lookup(patnode.key() + '.' + iedge.source().key());\n            val2.target = lookup(patnode.key() + '.' + iedge.target().key());\n            edges.push({\n                key: patnode.key() + '.' + iedge.key(),\n                value: val2\n            });\n        });\n    });\n    return mg.pattern({\n        interface: {\n            nodes,\n            edges\n        }\n    }, flowspecs);\n};\n","return metagraph;\n}\n    if (typeof define === 'function' && define.amd) {\n        define([], _metagraph);\n    } else if (typeof module == \"object\" && module.exports) {\n        module.exports = _metagraph();\n    } else {\n        this.metagraph = _metagraph();\n    }\n}\n)();\n"]}