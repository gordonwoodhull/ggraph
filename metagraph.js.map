{"version":3,"sources":["src/banner.js","src/core.js","src/graph.js","src/pattern.js","src/graph_pattern.js","src/footer.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC;AACrC,CAAC,GAAG,CAAC,MAAM,EAAE;;ACDb,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AACjB,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,EAAE;AACF,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;AACnB;AACA,QAAQ,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;AAC7C,QAAQ,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;AACzC,IAAI,GAAG;AACP,CAAC;AACD;AACA,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACxC,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACzC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;AACjC,QAAQ,MAAM,CAAC,CAAC,CAAC;AACjB,IAAI,EAAE,CAAC,IAAI;AACX,CAAC;;AChBD,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;AACnD,IAAI,EAAE,EAAE,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE;AAC7B,QAAQ,KAAK,CAAC,CAAC,CAAC,kBAAkB,CAAC,KAAK,EAAE;AAC1C,IAAI,EAAE,EAAE,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE;AAC7B,QAAQ,KAAK,CAAC,CAAC,CAAC,kBAAkB,CAAC,KAAK,EAAE;AAC1C,IAAI,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE;AAC7B,QAAQ,OAAO,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE;AACjD,QAAQ,OAAO,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE;AACjD,QAAQ,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE;AAC7D,QAAQ,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;AAC5D,IAAI,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI;AACtB;AACA,IAAI,GAAG,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC;AAC5E;AACA,IAAI,QAAQ,CAAC,gBAAgB,EAAE,CAAC,CAAC;AACjC,QAAQ,EAAE,CAAC,UAAU,CAAC;AACtB,YAAY,MAAM,CAAC;AACnB,QAAQ,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE;AACvE,IAAI,CAAC;AACL,IAAI,QAAQ,CAAC,gBAAgB,EAAE,CAAC,CAAC;AACjC,QAAQ,EAAE,CAAC,UAAU,CAAC;AACtB,YAAY,MAAM,CAAC;AACnB,QAAQ,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE;AACvE,IAAI,CAAC;AACL,IAAI,QAAQ,CAAC,gBAAgB,EAAE,CAAC,CAAC;AACjC,QAAQ,EAAE,CAAC,UAAU,CAAC;AACtB,YAAY,MAAM,CAAC;AACnB,QAAQ,gBAAgB,GAAG;AAC3B,QAAQ,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG;AACxF,IAAI,CAAC;AACL,IAAI,QAAQ,CAAC,gBAAgB,EAAE,CAAC,CAAC;AACjC,QAAQ,EAAE,CAAC,UAAU,CAAC;AACtB,YAAY,MAAM,CAAC;AACnB,QAAQ,gBAAgB,GAAG;AAC3B,QAAQ,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG;AACxF,IAAI,CAAC;AACL,IAAI,QAAQ,CAAC,4BAA4B,CAAC,GAAG,CAAC,CAAC,CAAC;AAChD,QAAQ,gBAAgB,GAAG;AAC3B,QAAQ,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG;AAChD,YAAY,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI;AACpD,YAAY,MAAM,CAAC,CAAC,CAAC;AACrB,QAAQ,EAAE,CAAC,IAAI;AACf,IAAI,CAAC;AACL,IAAI,QAAQ,CAAC,gBAAgB,EAAE,CAAC,CAAC;AACjC,QAAQ,EAAE,CAAC,SAAS,CAAC;AACrB,YAAY,MAAM,CAAC;AACnB,QAAQ,SAAS,CAAC,CAAC,CAAC,4BAA4B,CAAC,OAAO,CAAC,UAAU,EAAE;AACrE,IAAI,CAAC;AACL,IAAI,QAAQ,CAAC,eAAe,EAAE,CAAC,CAAC;AAChC,QAAQ,EAAE,CAAC,QAAQ,CAAC;AACpB,YAAY,MAAM,CAAC;AACnB,QAAQ,QAAQ,CAAC,CAAC,CAAC,4BAA4B,CAAC,OAAO,CAAC,UAAU,EAAE;AACpE,IAAI,CAAC;AACL,IAAI,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,QAAQ,MAAM,CAAC,CAAC;AAChB,YAAY,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC/B,gBAAgB,MAAM,CAAC,CAAC,CAAC;AACzB,YAAY,EAAE;AACd,YAAY,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC7B,gBAAgB,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,EAAE;AAC1C,YAAY,EAAE;AACd,YAAY,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC/B,gBAAgB,MAAM,CAAC,MAAM,CAAC;AAC9B,YAAY,EAAE;AACd,YAAY,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC9B,gBAAgB,gBAAgB,GAAG;AACnC,gBAAgB,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG;AACrD,YAAY,EAAE;AACd,YAAY,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC7B,gBAAgB,eAAe,GAAG;AAClC,gBAAgB,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG;AACpD,YAAY,CAAC;AACb,QAAQ,EAAE;AACV,IAAI,CAAC;AACL,IAAI,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,QAAQ,MAAM,CAAC,CAAC;AAChB,YAAY,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC/B,gBAAgB,MAAM,CAAC,CAAC,CAAC;AACzB,YAAY,EAAE;AACd,YAAY,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC7B,gBAAgB,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,EAAE;AAC1C,YAAY,EAAE;AACd,YAAY,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC/B,gBAAgB,MAAM,CAAC,MAAM,CAAC;AAC9B,YAAY,EAAE;AACd,YAAY,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;AAChC,gBAAgB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,GAAG;AAC1D,YAAY,EAAE;AACd,YAAY,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;AAChC,gBAAgB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,GAAG;AAC1D,YAAY,CAAC;AACb,QAAQ,EAAE;AACV,IAAI,CAAC;AACL,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAClB,QAAQ,IAAI,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;AAC7B,YAAY,gBAAgB,GAAG;AAC/B,YAAY,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE;AACnC,QAAQ,EAAE;AACV,QAAQ,IAAI,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;AAC7B,YAAY,gBAAgB,GAAG;AAC/B,YAAY,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE;AACnC,QAAQ,EAAE;AACV,QAAQ,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC3B,YAAY,gBAAgB,GAAG;AAC/B,YAAY,MAAM,CAAC,UAAU,CAAC;AAC9B,QAAQ,EAAE;AACV,QAAQ,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC3B,YAAY,gBAAgB,GAAG;AAC/B,YAAY,MAAM,CAAC,UAAU,CAAC;AAC9B,QAAQ,CAAC;AACT,IAAI,EAAE;AACN,IAAI,MAAM,CAAC,MAAM,CAAC;AAClB,CAAC;AACD;;AClHA,GAAG;AACH,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI;AAC7E,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG;AACtF,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI;AACrF,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG;AACzE,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI;AACpD,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,CAAC,OAAO;AACtE,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM;AAChF,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI;AACrC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK;AAC/E,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE;AAC3E,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;AACtC,CAAC,GAAG;AACJ,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;AACpC,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE;AACjD,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,IAAI;AACjD,IAAI,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;AAC1C,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;AACjC,YAAY,OAAO,CAAC,CAAC,EAAE;AACvB,QAAQ,EAAE;AACV,IAAI,GAAG;AACP,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AACpC,QAAQ,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAC1C,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE;AACjD,YAAY,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC/B,gBAAgB,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;AAClE,oBAAoB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,IAAI,EAAE;AACzD,gBAAgB,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE;AAC3C,YAAY,EAAE;AACd,QAAQ,EAAE;AACV,IAAI,CAAC;AACL;AACA,IAAI,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;AAC1C,QAAQ,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACxC,QAAQ,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;AAC/B,YAAY,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE;AAChD,YAAY,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAC7D,gBAAgB,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;AAC/C,oBAAoB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC;AACnD,oBAAoB,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;AACpC,wBAAwB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE;AACzF,wBAAwB,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;AACnE,4BAA4B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,IAAI,EAAE;AACjE,wBAAwB,IAAI;AAC5B,wBAAwB,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE;AAChE,oBAAoB,CAAC;AACrB,oBAAoB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE;AAC1D,oBAAoB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC;AACrD,gBAAgB,CAAC;AACjB,gBAAgB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI;AAChD,YAAY,EAAE;AACd,QAAQ,CAAC;AACT,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC;AACzB,QAAQ,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;AACjC,YAAY,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE;AACpD,YAAY,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC;AACpC,YAAY,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;AAC9B,gBAAgB,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE;AACnF,gBAAgB,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE;AAC/C,YAAY,CAAC;AACb,YAAY,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AAC1E,QAAQ,CAAC;AACT,QAAQ,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;AACjC,YAAY,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE;AACpD,YAAY,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC;AACpC,YAAY,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;AAC9B,gBAAgB,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE;AACnF,gBAAgB,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE;AAC/C,YAAY,CAAC;AACb,YAAY,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AAC1E,QAAQ,CAAC;AACT,IAAI,GAAG;AACP,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;AAC3B,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACpB,YAAY,OAAO,CAAC,CAAC,GAAG;AACxB,YAAY,OAAO,CAAC,CAAC,GAAG;AACxB,YAAY,IAAI,CAAC,CAAC,IAAI;AACtB,QAAQ,EAAE;AACV,QAAQ,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;AAC9C,YAAY,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;AACxD,gBAAgB,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG;AACjC,gBAAgB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,OAAO,EAAE,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;AACrF,oBAAoB,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE;AAC7F,gBAAgB,GAAG;AACnB,gBAAgB,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC5C,oBAAoB,MAAM,CAAC,GAAG,CAAC;AAC/B,gBAAgB,EAAE;AAClB,gBAAgB,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,WAAW,CAAC;AAClD,oBAAoB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC9C,wBAAwB,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE;AACnE,oBAAoB,EAAE;AACtB,gBAAgB,MAAM,CAAC,OAAO,CAAC;AAC/B,YAAY,EAAE;AACd,YAAY,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC;AACzC,gBAAgB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK;AACxF,QAAQ,GAAG;AACX,QAAQ,MAAM,CAAC,CAAC;AAChB,YAAY,IAAI,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;AACjC,gBAAgB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE;AACzC,YAAY,CAAC;AACb,QAAQ,EAAE;AACV,IAAI,EAAE;AACN,EAAE;AACF;AACA,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;AACnC,IAAI,MAAM,CAAC,CAAC;AACZ,QAAQ,MAAM,CAAC,CAAC,KAAK;AACrB,IAAI,EAAE;AACN,EAAE;AACF,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;AACpC,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,UAAU,GAAG,CAAC,CAAC;AAC3C,QAAQ,MAAM,CAAC,CAAC,IAAI;AACpB,IAAI,GAAG;AACP,EAAE;AACF,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;AACvC,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,UAAU,GAAG,CAAC,CAAC;AAC3C,QAAQ,WAAW,CAAC,CAAC,IAAI;AACzB,IAAI,GAAG;AACP,EAAE;AACF;AACA,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;AACxC,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AAChC,QAAQ,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;AACpC,YAAY,MAAM,CAAC,CAAC;AACpB,gBAAgB,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAC9C,oBAAoB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,IAAI;AACtE,uCAAuC,IAAI,CAAC,MAAM,GAAG,KAAK,GAAG,KAAK,CAAC,WAAW,CAAC;AAC/E,uCAAuC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE;AAC5E,gBAAgB,CAAC;AACjB,YAAY,EAAE;AACd,QAAQ,EAAE;AACV,QAAQ,YAAY,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;AACtC,YAAY,MAAM,CAAC,CAAC;AACpB,gBAAgB,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,aAAa,CAAC;AACvD,gBAAgB,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG;AACjC,gBAAgB,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACnD,oBAAoB,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;AAC5C,wBAAwB,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;AAC9C,4BAA4B,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE;AAC9C,wBAAwB,EAAE;AAC1B,oBAAoB,EAAE;AACtB,gBAAgB,CAAC;AACjB,YAAY,EAAE;AACd,QAAQ,EAAE;AACV,QAAQ,YAAY,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;AACtC,YAAY,MAAM,CAAC,CAAC;AACpB,gBAAgB,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,aAAa,CAAC;AACvD,gBAAgB,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACnD,oBAAoB,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;AACvC,wBAAwB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,IAAI;AACjE,oBAAoB,EAAE;AACtB,gBAAgB,CAAC;AACjB,YAAY,EAAE;AACd,QAAQ,CAAC;AACT,IAAI,GAAG;AACP,EAAE;AACF,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;AACtC,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AAChC,QAAQ,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;AACpC,YAAY,MAAM,CAAC,CAAC;AACpB,gBAAgB,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;AAC/C,gBAAgB,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AACrD,oBAAoB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;AAC7E,wBAAwB,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,GAAG;AACnF,oBAAoB,GAAG;AACvB,gBAAgB,CAAC;AACjB,YAAY,EAAE;AACd,QAAQ,EAAE;AACV,QAAQ,YAAY,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;AACtC,YAAY,MAAM,CAAC,CAAC;AACpB,gBAAgB,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,aAAa,CAAC;AACvD,gBAAgB,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG;AACjC,gBAAgB,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACnD,oBAAoB,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;AAC3C,wBAAwB,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC3C,4BAA4B,MAAM,CAAC,IAAI,CAAC;AACxC,wBAAwB,EAAE;AAC1B,oBAAoB,EAAE;AACtB,gBAAgB,CAAC;AACjB,YAAY,EAAE;AACd,QAAQ,CAAC;AACT,IAAI,GAAG;AACP,EAAE;AACF,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;AACxC,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AAChC,QAAQ,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;AACpC,YAAY,MAAM,CAAC,CAAC;AACpB,gBAAgB,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,WAAW,CAAC;AACrD,gBAAgB,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AACrD,wBAAwB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrF,4BAA4B,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE;AACnE,4BAA4B,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG;AAC7D,4BAA4B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC,IAAI;AACzF,4BAA4B,MAAM,CAAC,CAAC,CAAC;AACrC,wBAAwB,EAAE,CAAC,IAAI;AAC/B,gBAAgB,CAAC;AACjB,YAAY,EAAE;AACd,QAAQ,EAAE;AACV,QAAQ,YAAY,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;AACtC,YAAY,MAAM,CAAC,CAAC;AACpB,gBAAgB,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,aAAa,CAAC;AACvD,gBAAgB,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,WAAW,CAAC;AACrD,gBAAgB,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACnD,oBAAoB,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;AAC5C,wBAAwB,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC3C,4BAA4B,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,GAAG,GAAG;AACzE,wBAAwB,EAAE;AAC1B,oBAAoB,EAAE;AACtB,gBAAgB,CAAC;AACjB,YAAY,EAAE;AACd,QAAQ,EAAE;AACV,QAAQ,YAAY,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;AACtC,YAAY,MAAM,CAAC,CAAC;AACpB,gBAAgB,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,aAAa,CAAC;AACvD,gBAAgB,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG;AACjC,gBAAgB,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACnD,oBAAoB,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;AAC5C,wBAAwB,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC3C,4BAA4B,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,GAAG;AACvF,wBAAwB,EAAE;AAC1B,oBAAoB,EAAE;AACtB,gBAAgB,CAAC;AACjB,YAAY,EAAE;AACd,QAAQ,CAAC;AACT,IAAI,GAAG;AACP,CAAC;;ACnOD,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;AAC7C,IAAI,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE;AAC7B,QAAQ,OAAO,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE;AACjD,QAAQ,OAAO,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE;AACjD,QAAQ,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE;AAC7D,QAAQ,UAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;AAC5D,IAAI,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI;AACtB;AACA,IAAI,MAAM,CAAC,CAAC;AACZ,QAAQ,KAAK,CAAC,CAAC,CAAC;AAChB,YAAY,KAAK,CAAC,CAAC,EAAE,CAAC,WAAW,GAAG;AACpC,YAAY,IAAI,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,EAAE;AACjD,YAAY,IAAI,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC;AAChD,QAAQ,EAAE;AACV,QAAQ,KAAK,CAAC,CAAC,CAAC;AAChB,YAAY,UAAU,CAAC,CAAC,EAAE,CAAC,WAAW,EAAE;AACxC,gBAAgB,MAAM,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE;AAChD,gBAAgB,aAAa,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC;AAC7D,YAAY,GAAG;AACf,YAAY,WAAW,CAAC,CAAC,EAAE,CAAC,SAAS,EAAE;AACvC,gBAAgB,MAAM,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE;AAChD,gBAAgB,aAAa,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,UAAU,CAAC;AAC3D,YAAY,GAAG;AACf,YAAY,UAAU,CAAC,CAAC,EAAE,CAAC,WAAW,EAAE;AACxC,gBAAgB,MAAM,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE;AAChD,gBAAgB,aAAa,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC;AAC7D,YAAY,GAAG;AACf,YAAY,WAAW,CAAC,CAAC,EAAE,CAAC,SAAS,EAAE;AACvC,gBAAgB,MAAM,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE;AAChD,gBAAgB,aAAa,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,UAAU,CAAC;AAC3D,YAAY,GAAG;AACf,YAAY,WAAW,CAAC,CAAC,EAAE,CAAC,WAAW,EAAE;AACzC,gBAAgB,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE;AAC/C,gBAAgB,aAAa,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,UAAU,EAAE;AACnE,gBAAgB,aAAa,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,UAAU,EAAE;AACjE,gBAAgB,MAAM,CAAC,CAAC,OAAO,CAAC,UAAU;AAC1C,YAAY,GAAG;AACf,YAAY,WAAW,CAAC,CAAC,EAAE,CAAC,WAAW,EAAE;AACzC,gBAAgB,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE;AAC/C,gBAAgB,aAAa,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,UAAU,EAAE;AACnE,gBAAgB,aAAa,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,UAAU,EAAE;AAChE,gBAAgB,MAAM,CAAC,CAAC,OAAO,CAAC,UAAU;AAC1C,YAAY,EAAE;AACd,QAAQ,GAAG;AACX,EAAE;;AC5CF,MAAM,CAAC,SAAS,CAAC;AACjB,CAAC;AACD,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;AACrD,QAAQ,MAAM,IAAI,CAAC,UAAU,EAAE;AAC/B,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;AAC7D,QAAQ,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,UAAU,GAAG;AACtC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;AACZ,QAAQ,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,GAAG;AACtC,IAAI,CAAC;AACL,CAAC;AACD,IAAI","file":"metagraph.js","sourcesContent":["(function() { function _metagraph() {\n'use strict';\n","var metagraph = {\n    version: '0.0.2'\n};\nvar mg = metagraph;\n\nfunction object_to_keyvalue(o) {\n    return Object.keys(o).map(function(key) {\n        return {key: key, value: o[key]};\n    });\n}\n\nfunction build_index(vals, keyf, wrap) {\n    return vals.reduce(function(o, val) {\n        o[keyf(val)] = wrap(val);\n        return o;\n    }, {});\n}\n","metagraph.graph = function(nodes, edges, options) {\n    if(!Array.isArray(nodes))\n        nodes = object_to_keyvalue(nodes);\n    if(!Array.isArray(edges))\n        edges = object_to_keyvalue(edges);\n    options = Object.assign({\n        nodeKey: function(kv) { return kv.key; },\n        edgeKey: function(kv) { return kv.key; },\n        edgeSource: function(kv) { return kv.value.source; },\n        edgeTarget: function(kv) { return kv.value.target; }\n    }, options || {});\n\n    var _nodeIndex, _edgeIndex, _nodesList, _edgesList, _outsList, _insList;\n\n    function build_node_index() {\n        if(_nodeIndex)\n            return;\n        _nodeIndex = build_index(nodes, options.nodeKey, node_wrapper);\n    }\n    function build_edge_index() {\n        if(_edgeIndex)\n            return;\n        _edgeIndex = build_index(edges, options.edgeKey, edge_wrapper);\n    }\n    function build_nodes_list() {\n        if(_nodesList)\n            return;\n        build_node_index();\n        _nodesList = nodes.map(function(v) { return _graph.node(options.nodeKey(v)); });\n    }\n    function build_edges_list() {\n        if(_edgesList)\n            return;\n        build_edge_index();\n        _edgesList = edges.map(function(v) { return _graph.edge(options.edgeKey(v)); });\n    }\n    function build_directional_edge_lists(acc) {\n        build_edge_index();\n        return edges.reduce(function(o, v) {\n            var l = o[acc(v)] = o[acc(v)] || [];\n            l.push(_graph.edge(options.edgeKey(v)));\n            return o;\n        }, {});\n    }\n    function build_outs_index() {\n        if(_outsList)\n            return;\n        _outsList = build_directional_edge_lists(options.edgeSource);\n    }\n    function build_ins_index() {\n        if(_insList)\n            return;\n        _insList = build_directional_edge_lists(options.edgeTarget);\n    }\n    function node_wrapper(n) {\n        return {\n            value: function() {\n                return n;\n            },\n            key: function() {\n                return options.nodeKey(n);\n            },\n            graph: function() {\n                return _graph;\n            },\n            outs: function() {\n                build_outs_index();\n                return _outsList[options.nodeKey(n)];\n            },\n            ins: function() {\n                build_ins_index();\n                return _insList[options.nodeKey(n)];\n            }\n        };\n    }\n    function edge_wrapper(e) {\n        return {\n            value: function() {\n                return e;\n            },\n            key: function() {\n                return options.edgeKey(e);\n            },\n            graph: function() {\n                return _graph;\n            },\n            source: function() {\n                return _graph.node(options.edgeSource(e));\n            },\n            target: function() {\n                return _graph.node(options.edgeTarget(e));\n            }\n        };\n    }\n    var _graph = {\n        node: function(key) {\n            build_node_index();\n            return _nodeIndex[key];\n        },\n        edge: function(key) {\n            build_edge_index();\n            return _edgeIndex[key];\n        },\n        nodes: function() {\n            build_nodes_list();\n            return _nodesList;\n        },\n        edges: function() {\n            build_edges_list();\n            return _edgesList;\n        }\n    };\n    return _graph;\n}\n\n","/**\n * The reason there are so many higher-order functions is that there are five\n * stages of a pattern's life:\n * - specification - the pattern author specifies a pattern by calling one_to_many and\n *   friends. the pattern make take options with accessors for reading raw array data\n * - definition (compilation) - the pattern walks the resulting graph and\n *   defines the functions that will respond to data\n * - instantiation - data is provided to the pattern to create objects\n * - binding - if the action needs other indices built, they are built on demand\n *   and provided to the action before it's run (*)\n * - action - responding to user code\n * (*) for buildIndex, the binding and action happen in one step. members first\n * bind to the indices and return the function and responds to the user, in\n * order not to pollute the signature.\n **/\nmetagraph.pattern = function(spec) {\n    var graph = mg.graph(spec.nodes, spec.edges);\n    var defn = {node: {}, edge: {}, indices: {}};\n    graph.nodes().forEach(function(node) {\n        defn.node[node.key()] = {\n            members: {}\n        };\n    });\n    function resolve(deps, funfun) {\n        return function(defn, impl, val) {\n            var action = funfun(defn, impl, val);\n            return function() {\n                return action.apply(null, deps.map(function(dep) {\n                    return defn.indices[dep](defn, impl);\n                })).apply(null, arguments);\n            };\n        };\n    }\n\n    graph.edges().forEach(function(edge) {\n        var evalue = edge.value().value;\n        if(evalue.buildIndex) {\n            var buind = evalue.buildIndex(edge);\n            defn.indices[edge.key()] = function(defn, impl) {\n                if(!impl.indices[edge.key()]) {\n                    var args = [defn, impl], index;\n                    if(buind.deps) {\n                        var deps = Array.isArray(buind.deps) ? buind.deps : [buind.deps];\n                        args = args.concat(deps.map(function(dep) {\n                            return defn.indices[dep](defn, impl);\n                        }));\n                        index = buind.funfun.apply(buind, args);\n                    }\n                    else index = buind.funfun(defn, impl);\n                    impl.indices[edge.key()] = index;\n                }\n                return impl.indices[edge.key()];\n            };\n        }\n        var deps, funfun;\n        if(evalue.sourceMember) {\n            var sourmem = evalue.sourceMember(edge);\n            funfun = sourmem.funfun;\n            if(sourmem.deps) {\n                deps = Array.isArray(sourmem.deps) ? sourmem.deps : [sourmem.deps];\n                funfun = resolve(deps, funfun);\n            }\n            defn.node[edge.source().key()].members[sourmem.name] = funfun;\n        }\n        if(evalue.targetMember) {\n            var targmem = evalue.targetMember(edge);\n            funfun = targmem.funfun;\n            if(targmem.deps) {\n                deps = Array.isArray(targmem.deps) ? targmem.deps : [targmem.deps];\n                funfun = resolve(deps, funfun);\n            }\n            defn.node[edge.target().key()].members[targmem.name] = funfun;\n        }\n    });\n    return function(data) {\n        var impl = {\n            indices: {},\n            objects: {},\n            data: data\n        };\n        graph.nodes().forEach(function(node) {\n            defn.node[node.key()].wrap = function(val) {\n                var wrapper = {};\n                Object.keys(defn.node[node.key()].members).forEach(function(member) {\n                    wrapper[member] = defn.node[node.key()].members[member](defn, impl, val);\n                });\n                wrapper.value = function() {\n                    return val;\n                };\n                if(node.value().value.keyFunction)\n                    wrapper.key = function() {\n                        return node.value().value.keyFunction(val);\n                    };\n                return wrapper;\n            };\n            if(node.value().value.single)\n                impl.objects[node.key()] = defn.node[node.key()].wrap(data[node.key()]);\n        });\n        return {\n            root: function(key) {\n                return impl.objects[key];\n            }\n        };\n    };\n};\n\nmetagraph.basic_type = function() {\n    return {\n        single: false\n    };\n};\nmetagraph.single_type = function() {\n    return Object.assign(mg.basic_type(), {\n        single: true\n    });\n};\nmetagraph.table_type = function(keyf) {\n    return Object.assign(mg.basic_type(), {\n        keyFunction: keyf\n    });\n};\n\nmetagraph.one_to_many = function(spec) {\n    return Object.assign(spec, {\n        buildIndex: function(edge) {\n            return {\n                funfun: function(defn, impl) {\n                    return build_index(impl.data[edge.target().key()],\n                                       edge.target().value().value.keyFunction,\n                                       defn.node[edge.target().key()].wrap);\n                }\n            };\n        },\n        sourceMember: function(edge) {\n            return {\n                name: edge.value().value.source_member,\n                deps: edge.key(),\n                funfun: function(defn, impl, val) {\n                    return function(index) {\n                        return function(key) {\n                            return index[key];\n                        };\n                    };\n                }\n            };\n        },\n        targetMember: function(edge) {\n            return {\n                name: edge.value().value.target_member,\n                funfun: function(defn, impl, val) {\n                    return function() {\n                        return impl.objects[edge.source().key()];\n                    };\n                }\n            };\n        }\n    });\n};\nmetagraph.get_table = function(spec) {\n    return Object.assign(spec, {\n        buildIndex: function(edge) {\n            return {\n                deps: edge.value().value.index,\n                funfun: function(defn, impl, index) {\n                    return impl.data[edge.target().key()].map(function(val) {\n                        return index[edge.target().value().value.keyFunction(val)];\n                    });\n                }\n            };\n        },\n        sourceMember: function(edge) {\n            return {\n                name: edge.value().value.source_member,\n                deps: edge.key(),\n                funfun: function(defn, impl, val) {\n                    return function(list) {\n                        return function() {\n                            return list;\n                        };\n                    };\n                }\n            };\n        }\n    });\n};\nmetagraph.many_to_one = function(spec) {\n    return Object.assign(spec, {\n        buildIndex: function(edge) {\n            return {\n                deps: edge.value().value.target_deps,\n                funfun: function(defn, impl, index) {\n                        return impl.data[edge.source().key()].reduce(function(o, v) {\n                            var key = edge.value().value.access(v);\n                            var list = o[key] = o[key] || [];\n                            list.push(index[edge.source().value().value.keyFunction(v)]);\n                            return o;\n                        }, {});\n                }\n            };\n        },\n        sourceMember: function(edge) {\n            return {\n                name: edge.value().value.source_member,\n                deps: edge.value().value.source_deps,\n                funfun: function(defn, impl, val) {\n                    return function(index) {\n                        return function() {\n                            return index[edge.value().value.access(val)];\n                        };\n                    };\n                }\n            };\n        },\n        targetMember: function(edge) {\n            return {\n                name: edge.value().value.target_member,\n                deps: edge.key(),\n                funfun: function(defn, impl, val) {\n                    return function(index) {\n                        return function() {\n                            return index[edge.target().value().value.keyFunction(val)];\n                        };\n                    };\n                }\n            };\n        }\n    });\n}\n","metagraph.graph_pattern = function(options) {\n    options = Object.assign({\n        nodeKey: function(kv) { return kv.key; },\n        edgeKey: function(kv) { return kv.key; },\n        edgeSource: function(kv) { return kv.value.source; },\n        edgeTarget: function(kv) { return kv.value.target; }\n    }, options || {});\n\n    return {\n        nodes: {\n            Graph: mg.single_type(),\n            Node: mg.table_type(options.nodeKey),\n            Edge: mg.table_type(options.edgeKey)\n        },\n        edges: {\n            graph_node: mg.one_to_many({\n                source: 'Graph', target: 'Node',\n                source_member: 'node', target_member: 'graph'\n            }),\n            graph_nodes: mg.get_table({\n                source: 'Graph', target: 'Node',\n                source_member: 'nodes', index: 'graph_node'\n            }),\n            graph_edge: mg.one_to_many({\n                source: 'Graph', target: 'Edge',\n                source_member: 'edge', target_member: 'graph'\n            }),\n            graph_edges: mg.get_table({\n                source: 'Graph', target: 'Edge',\n                source_member: 'edges', index: 'graph_edge'\n            }),\n            edge_source: mg.many_to_one({\n                source: 'Edge', target: 'Node',\n                source_member: 'source', source_deps: 'graph_node',\n                target_member: 'outs', target_deps: 'graph_edge',\n                access: options.edgeSource\n            }),\n            edge_target: mg.many_to_one({\n                source: 'Edge', target: 'Node',\n                source_member: 'target', source_deps: 'graph_node',\n                target_member: 'ins', target_deps: 'graph_edge',\n                access: options.edgeTarget\n            })\n        }};\n};\n","return metagraph;\n}\n    if (typeof define === 'function' && define.amd) {\n        define([], _metagraph);\n    } else if (typeof module == \"object\" && module.exports) {\n        module.exports = _metagraph();\n    } else {\n        this.metagraph = _metagraph();\n    }\n}\n)();\n"]}